<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>true</ImplicitUsings>
        <LangVersion>10</LangVersion>
        <OutputPath>../../bin/Errorka</OutputPath>
        <DebugType>pdbonly</DebugType>
        <DebugSymbols>true</DebugSymbols>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <Optimize>false</Optimize>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Optimize>true</Optimize>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.2" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.1" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    </ItemGroup>

    <!-- NuGet -->
    <PropertyGroup>
        <PackageId>Errorka</PackageId>
        <Title>Errorka</Title>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <FileVersion>0.1.0</FileVersion>
        <Version>0.1.0</Version>
        <Authors>Alexey Pepelev</Authors>
        <Product>Errorka</Product>
        <Description>Errorka allows to handle errors in safe manner</Description>
        <Summary>Errorka allows to handle errors in safe manner</Summary>
        <PackageTags>error discriminatedunion</PackageTags>
        <PackageIcon>logo128x128.png</PackageIcon>
        <PackageIconFullPath>$(MSBuildThisFileDirectory)\..\..\logo128x128.png</PackageIconFullPath>
        <PackageProjectUrl>https://github.com/pepelev/Errorka</PackageProjectUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <MinClientVersion>2.12</MinClientVersion>
        <IncludeSymbols>true</IncludeSymbols>
        <IncludeSource>true</IncludeSource>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <RepositoryType>git</RepositoryType>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Environment)' == 'ci'">
        <Deterministic>true</Deterministic>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>

    <PropertyGroup>
        <IncludeBuildOutput>false</IncludeBuildOutput>
    </PropertyGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>

    <!-- Import icon -->
    <ItemGroup>
        <None Include="$(PackageIconFullPath)" Pack="true" PackagePath="\" />
    </ItemGroup>

</Project>
